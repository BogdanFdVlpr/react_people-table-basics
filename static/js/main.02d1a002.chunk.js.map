{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","name","sex","slug","PeopleTable","people","isIncludedName","findNameLink","born","died","fatherName","motherName","useParams","PeoplePage","peoples","setPeoples","useState","loader","setLoader","error","setError","useEffect","persons","catch","finally","some","activeName","find","map","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.02d1a002.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string,\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item',\n      { 'has-background-grey-lighter': isActive })}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  name: string,\n  slug: string,\n  sex: string,\n};\n\nexport const PersonLink: FC<Props> = ({ name, sex, slug }) => (\n  <Link\n    className={classNames('', { 'has-text-danger': sex === 'f' })}\n    to={`/people/${slug}`}\n  >\n    {name}\n  </Link>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person,\n  isIncludedName: (motherName: string | null) => boolean,\n  findNameLink: (name: string | null) => string | undefined;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people, isIncludedName, findNameLink,\n}) => {\n  const {\n    name, sex, born, died, fatherName, motherName,\n  } = people;\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames('',\n        { 'has-background-warning': people.slug === slug })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          slug={people.slug}\n          sex={sex}\n        />\n      </td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {isIncludedName(motherName) ? (\n          <Link\n            className=\"has-text-danger\"\n            to={`/people/${findNameLink(motherName) || ''}`}\n          >\n            {motherName || '-'}\n          </Link>\n        ) : (\n          <p>\n            {motherName || '-'}\n          </p>\n        )}\n      </td>\n      <td>\n        {isIncludedName(fatherName) ? (\n          <Link\n            to={`/people/${findNameLink(fatherName) || ''}`}\n          >\n            {fatherName || '-'}\n          </Link>\n        ) : (\n          <p>\n            {fatherName || '-'}\n          </p>\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\ntype Props = {\n  peoples: Person[],\n  setPeoples: (value: Person[]) => void,\n};\n\nexport const PeoplePage: React.FC<Props> = ({\n  peoples, setPeoples,\n}) => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setLoader(true);\n\n    getPeople()\n      .then((persons) => setPeoples(persons))\n      .catch(() => setError(true))\n      .finally(() => setLoader(false));\n  }, []);\n\n  const isIncludedName = (motherName: string | null) => {\n    return peoples.some(people => people.name === motherName);\n  };\n\n  const findNameLink = (activeName: string | null) => {\n    return peoples.find(people => people.name === activeName)?.slug;\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {loader && (\n            <Loader />)}\n\n          {error && (\n            <>\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                Something went wrong\n              </p>\n\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </>\n          )}\n\n          {!loader && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {peoples.map(people => (\n                  <PeopleTable\n                    key={people.name}\n                    people={people}\n                    isIncludedName={isIncludedName}\n                    findNameLink={findNameLink}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { MainNav } from './components/MainNav';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Person } from './types';\n\nexport const App = () => {\n  const [peoples, setPeoples] = useState<Person[]>([]);\n\n  return (\n    <div data-cy=\"app\">\n      <MainNav />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"people\">\n              <Route\n                index\n                element={(\n                  <PeoplePage\n                    peoples={peoples}\n                    setPeoples={setPeoples}\n                  />\n                )}\n              />\n              <Route\n                path=\":slug\"\n                element={(\n                  <PeoplePage\n                    peoples={peoples}\n                    setPeoples={setPeoples}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}